{
  "name": "vscode-documentdb",
  "version": "0.4.0",
  "aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
  "publisher": "ms-azuretools",
  "displayName": "DocumentDB for VS Code",
  "description": "DocumentDB and MongoDB GUI: Connect to databases, run queries, and manage your data. Supports working with databases across both cloud-based and local environments.",
  "enableMongoClusters": true,
  "engines": {
    "vscode": "^1.90.0",
    "node": ">=20.0.0"
  },
  "galleryBanner": {
    "color": "#3c3c3c",
    "theme": "dark"
  },
  "icon": "resources/vscode-documentdb-marketplace-logo.png",
  "categories": [
    "AI",
    "Azure",
    "Chat",
    "Data Science",
    "Machine Learning",
    "Programming Languages",
    "Snippets",
    "Visualization"
  ],
  "keywords": [
    "MongoDB",
    "DocumentDB",
    "FerretDB",
    "Database",
    "Databases",
    "NoSQL",
    "JSON"
  ],
  "homepage": "https://github.com/microsoft/vscode-documentdb/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/microsoft/vscode-documentdb/issues"
  },
  "license": "SEE LICENSE IN LICENSE.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/vscode-documentdb"
  },
  "main": "./main",
  "l10n": "./l10n",
  "activationEvents": [
    "onView:workbench.view.extension.documentDB",
    "onCommand:workbench.action.openWalkthrough",
    "onStartupFinished",
    "onUri"
  ],
  "scripts": {
    "build": "tsc",
    "clean": "git clean -dfx",
    "compile": "tsc -watch",
    "package": "run-script-os",
    "package:win32": "npm run webpack-prod && cd dist && npm pkg delete \"scripts.vscode:prepublish\" && npx vsce package --no-dependencies --out ../%npm_package_name%-%npm_package_version%.vsix",
    "package:default": "npm run webpack-prod && cd dist && npm pkg delete \"scripts.vscode:prepublish\" && npx vsce package --no-dependencies --out ../${npm_package_name}-${npm_package_version}.vsix",
    "package-prerelease": "run-script-os",
    "package-prerelease:win32": "npm run webpack-prod && cd dist && npm pkg delete \"scripts.vscode:prepublish\" && npx vsce package --pre-release --no-dependencies --out ../%npm_package_name%-%npm_package_version%-pre-release.vsix",
    "package-prerelease:default": "npm run webpack-prod && cd dist && npm pkg delete \"scripts.vscode:prepublish\" && npx vsce package --pre-release --no-dependencies --out ../${npm_package_name}-${npm_package_version}-pre-release.vsix",
    "lint": "eslint --quiet .",
    "lint-fix": "eslint . --fix",
    "prettier": "prettier -c \"(src|test|l10n|grammar|docs)/**/*.@(js|ts|jsx|tsx|json)\" \"./*.@(js|ts|jsx|tsx|json)\"",
    "prettier-fix": "prettier -w \"(src|test|l10n|grammar|docs)/**/*.@(js|ts|jsx|tsx|json)\" \"./*.@(js|ts|jsx|tsx|json)\"",
    "pretest": "npm run build",
    "test": "vscode-test",
    "jesttest": "jest",
    "update-grammar": "antlr4ts -visitor ./grammar/mongo.g4 -o src/documentdb/grammar",
    "webpack-dev": "rimraf ./dist && npm run webpack-dev-ext && npm run webpack-dev-wv",
    "webpack-prod": "rimraf ./dist && npm run webpack-prod-ext && npm run webpack-prod-wv",
    "webpack-dev-ext": "webpack --mode development --config ./webpack.config.ext.js",
    "webpack-dev-wv": "webpack --mode development --config ./webpack.config.views.js",
    "webpack-prod-ext": "webpack --mode production --config ./webpack.config.ext.js",
    "webpack-prod-wv": "webpack --mode production --config ./webpack.config.views.js",
    "watch:ext": "webpack --mode development --config ./webpack.config.ext.js --watch",
    "watch:views": "webpack serve --mode development --config ./webpack.config.views.js",
    "resapi.resetall": "rimraf out node_modules dist && npm install && npm run resapi.link",
    "resapi.link": "npm link @microsoft/vscode-azureresources-api",
    "l10n": "node l10n/scripts/build.l10n.mjs",
    "l10n:check": "node l10n/scripts/check.l10n.mjs",
    "l10n:auto": "cross-env AZURE_TRANSLATOR_KEY= cross-env AZURE_TRANSLATOR_REGION= npx @vscode/l10n-dev generate-azure --outDir ./l10n ./l10n/bundle.l10n.json ./package.nls.json",
    "l10n:export": "npx @vscode/l10n-dev generate-xlf ./l10n/bundle.l10n.json --outFile vscode-documentdb.xlf",
    "l10n:import": "npx @vscode/l10n-dev import-xlf ./translations.xlf"
  },
  "devDependencies": {
    "@eslint/js": "~9.31.0",
    "@pmmmwh/react-refresh-webpack-plugin": "~0.6.1",
    "@swc/cli": "~0.7.8",
    "@swc/core": "~1.13.2",
    "@swc/jest": "~0.2.39",
    "@types/documentdb": "~1.10.13",
    "@types/jest": "~30.0.0",
    "@types/mocha": "~10.0.10",
    "@types/node": "~22.15.32",
    "@types/react": "~18.3.23",
    "@types/react-dom": "~18.3.7",
    "@types/semver": "~7.7.0",
    "@types/uuid": "~10.0.0",
    "@types/vscode": "1.90.0",
    "@types/vscode-webview": "~1.57.5",
    "@vscode/l10n-dev": "~0.0.35",
    "@vscode/test-cli": "~0.0.11",
    "@vscode/test-electron": "~2.5.2",
    "@vscode/vsce": "~3.6.0",
    "antlr4ts-cli": "^0.5.0-alpha.4",
    "copy-webpack-plugin": "~13.0.0",
    "cross-env": "~7.0.3",
    "css-loader": "~7.1.2",
    "eslint": "~9.31.0",
    "eslint-plugin-import": "~2.32.0",
    "eslint-plugin-jest": "~29.0.1",
    "eslint-plugin-license-header": "~0.8.0",
    "eslint-plugin-mocha": "~11.1.0",
    "glob": "~11.0.3",
    "globals": "~16.3.0",
    "jest": "~30.0.5",
    "jest-mock-vscode": "~3.0.5",
    "mocha": "~11.7.1",
    "mocha-junit-reporter": "~2.2.1",
    "mocha-multi-reporters": "~1.5.1",
    "monaco-editor-webpack-plugin": "~7.1.0",
    "prettier": "~3.6.2",
    "prettier-plugin-organize-imports": "~4.2.0",
    "react": "~18.3.1",
    "react-dom": "~18.3.1",
    "react-refresh": "~0.17.0",
    "rimraf": "~6.0.1",
    "run-script-os": "~1.1.6",
    "sass": "~1.89.2",
    "sass-loader": "~16.0.5",
    "style-loader": "~4.0.0",
    "swc-loader": "~0.2.6",
    "terser-webpack-plugin": "~5.3.14",
    "ts-jest": "~29.4.0",
    "ts-node": "~10.9.2",
    "typescript": "~5.8.3",
    "typescript-eslint": "~8.38.0",
    "webpack": "~5.95.0",
    "webpack-bundle-analyzer": "~4.10.2",
    "webpack-cli": "~6.0.1",
    "webpack-dev-server": "~5.2.2"
  },
  "dependencies": {
    "@azure/arm-compute": "^22.4.0",
    "@azure/arm-cosmosdb": "16.3.0",
    "@azure/arm-mongocluster": "1.1.0-beta.1",
    "@azure/arm-network": "^33.5.0",
    "@azure/arm-resources": "~6.1.0",
    "@azure/cosmos": "~4.5.0",
    "@azure/identity": "~4.10.2",
    "@fluentui/react-components": "~9.67.0",
    "@fluentui/react-icons": "~2.0.306",
    "@microsoft/vscode-azext-azureauth": "~4.1.1",
    "@microsoft/vscode-azext-azureutils": "~3.4.5",
    "@microsoft/vscode-azext-utils": "~3.3.1",
    "@microsoft/vscode-azureresources-api": "~2.5.0",
    "@monaco-editor/react": "~4.7.0",
    "@trpc/client": "~11.4.3",
    "@trpc/server": "~11.4.3",
    "@vscode/l10n": "~0.0.18",
    "allotment": "~1.20.4",
    "antlr4ts": "^0.5.0-alpha.4",
    "bson": "~6.10.4",
    "denque": "~2.1.0",
    "es-toolkit": "~1.39.7",
    "monaco-editor": "~0.51.0",
    "mongodb": "~6.17.0",
    "mongodb-connection-string-url": "~3.0.2",
    "react-hotkeys-hook": "~5.1.0",
    "regenerator-runtime": "^0.14.1",
    "semver": "~7.7.2",
    "slickgrid-react": "~5.14.1",
    "vscode-json-languageservice": "~5.6.1",
    "vscode-languageclient": "~9.0.1",
    "vscode-languageserver": "~9.0.1",
    "vscode-languageserver-textdocument": "~1.0.12",
    "vscode-uri": "~3.1.0",
    "zod": "~4.0.5"
  },
  "//overrides": "only jest 30 depends on glob 11",
  "overrides": {
    "glob": "~11.0.3",
    "test-exclude": "~7.0.1"
  },
  "extensionDependencies": [],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "documentDB",
          "title": "DocumentDB",
          "icon": "resources/vscode-documentdb-sidebar-icon.svg"
        }
      ]
    },
    "views": {
      "documentDB": [
        {
          "id": "connectionsView",
          "name": "DocumentDB Connections",
          "visibility": "visible",
          "icon": "$(plug)"
        },
        {
          "id": "discoveryView",
          "name": "Service Discovery",
          "visibility": "visible",
          "icon": "$(plug)"
        },
        {
          "id": "documentDBHelp",
          "name": "Help and Feedback",
          "visibility": "collapsed",
          "icon": "$(question)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "connectionsView",
        "contents": "Welcome! To start exploring and managing your database, you'll need to connect to it first. Once connected, you can easily view, query, and modify your data.\n\n[$(plus) Add New Connectionâ€¦](command:vscode-documentdb.command.connectionsView.newConnection)\nClick the button above to get started and unlock the full potential of your database."
      },
      {
        "view": "discoveryView",
        "contents": "Discover DocumentDB clusters across your cloud providers. Activate discovery to explore and manage your databases.\n[$(search) Activate Service Discovery](command:vscode-documentdb.command.discoveryView.addRegistry)\nClick the button above to get started and to start discovering your databases."
      }
    ],
    "languages": [
      {
        "id": "vscode-documentdb-scrapbook-language",
        "aliases": [
          "DocumentDB Scrapbook"
        ],
        "extensions": [
          ".vscode-documentdb-scrapbook"
        ],
        "configuration": "./grammar/configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "vscode-documentdb-scrapbook-language",
        "scopeName": "source.mongo.js",
        "path": "./grammar/JavaScript.tmLanguage.json"
      },
      {
        "scopeName": "source.mongo.js.regexp",
        "path": "./grammar/Regular Expressions (JavaScript).tmLanguage"
      }
    ],
    "commands": [
      {
        "//": "[ConnectionsView] New Connection",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.connectionsView.newConnection",
        "title": "New Connectionâ€¦",
        "icon": "$(add)"
      },
      {
        "//": "[ConnectionsView] Update Credentials",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.connectionsView.updateCredentials",
        "title": "Update Credentialsâ€¦",
        "icon": "$(key)"
      },
      {
        "//": "[ConnectionsView] Update Connection String",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.connectionsView.updateConnectionString",
        "title": "Update Connection Stringâ€¦",
        "icon": "$(whole-word)"
      },
      {
        "//": "[ConnectionsView] Rename Connection",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.connectionsView.renameConnection",
        "title": "Renameâ€¦",
        "icon": "$(edit)"
      },
      {
        "//": "[ConnectionsView] New Local Connection",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.connectionsView.newEmulatorConnection",
        "title": "New Local Connectionâ€¦",
        "icon": "$(add)"
      },
      {
        "//": "[ConnectionsView] Remove Connection",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.connectionsView.removeConnection",
        "title": "Removeâ€¦"
      },
      {
        "//": "[ConnectionsView] Refresh View",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.connectionsView.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "//": "[DiscoveryView] Refresh View",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.discoveryView.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "//": "[DiscoveryView] Enable Registry",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.discoveryView.addRegistry",
        "title": "Enable New Registryâ€¦",
        "icon": "$(add)"
      },
      {
        "//": "[DiscoveryView] Disable Registry",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.discoveryView.removeRegistry",
        "title": "Disable Registry"
      },
      {
        "//": "[DiscoveryView] Save To DocumentDB Connections",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.discoveryView.addConnectionToConnectionsView",
        "title": "Save To DocumentDB Connections",
        "icon": "$(save)"
      },
      {
        "//": "[DiscoveryView] Filter Provider Content",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.discoveryView.filterProviderContent",
        "title": "Filter Entriesâ€¦",
        "icon": "$(filter)"
      },
      {
        "//": "[DiscoveryView] Learn More About Service Provider",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.discoveryView.learnMoreAboutProvider",
        "title": "Learn More",
        "icon": "$(info)"
      },
      {
        "//": "[ResourcesView] Save To DocumentDB Connections",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.azureResourcesView.addConnectionToConnectionsView",
        "title": "Add To Connections In The \"DocumentDB View\"",
        "icon": "$(save)"
      },
      {
        "//": "Refresh a Tree Item",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "//": "Copy Connection String",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.copyConnectionString",
        "title": "Copy Connection String"
      },
      {
        "//": "Create Database",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.createDatabase",
        "title": "Create Databaseâ€¦"
      },
      {
        "//": "Scrapbook: Connect Database",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.scrapbook.connect",
        "title": "Connect to this database"
      },
      {
        "//": "Scrapbook: Execute All Commands",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.scrapbook.executeAllCommands",
        "title": "Execute All Commands"
      },
      {
        "//": "Scrapbook: Execute Command",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.scrapbook.executeCommand",
        "title": "Execute Command"
      },
      {
        "//": "Scrapbook: New Scrapbook",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.scrapbook.new",
        "title": "New DocumentDB Scrapbook",
        "icon": "$(new-file)"
      },
      {
        "//": "Delete Collection",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.dropCollection",
        "title": "Delete Collectionâ€¦"
      },
      {
        "//": "Delete Database",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.dropDatabase",
        "title": "Delete Databaseâ€¦"
      },
      {
        "//": "Create Collection",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.createCollection",
        "title": "Create Collectionâ€¦"
      },
      {
        "//": "Import Documents",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.importDocuments",
        "title": "Import Documents into Collectionâ€¦"
      },
      {
        "//": "Export Documents",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.exportDocuments",
        "title": "Export Documents from Collectionâ€¦"
      },
      {
        "//": "Data Migration",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.chooseDataMigrationExtension",
        "title": "Data Migrationâ€¦"
      },
      {
        "//": "Create Document",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.createDocument",
        "title": "Create Documentâ€¦"
      },
      {
        "//": "Launch Shell",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.launchShell",
        "title": "Launch Shell"
      },
      {
        "//": "Open Container View",
        "category": "DocumentDB",
        "command": "vscode-documentdb.command.containerView.open",
        "title": "Open Collection"
      }
    ],
    "submenus": [
      {
        "id": "documentDB.submenus.mongo.database.scrapbook",
        "label": "DocumentDB Scrapbook"
      },
      {
        "id": "documentDB.submenus.mongo.collection.scrapbook",
        "label": "DocumentDB Scrapbook"
      }
    ],
    "menus": {
      "documentDB.submenus.mongo.database.scrapbook": [
        {
          "//": "[Database] Scrapbook: New Scrapbook",
          "command": "vscode-documentdb.command.scrapbook.new",
          "group": "1@1"
        },
        {
          "//": "[Database] Scrapbook: Connect",
          "command": "vscode-documentdb.command.scrapbook.connect",
          "group": "1@2"
        }
      ],
      "documentDB.submenus.mongo.collection.scrapbook": [
        {
          "//": "[Collection] Mongo DB|Cluster Scrapbook New",
          "command": "vscode-documentdb.command.scrapbook.new",
          "group": "1@1"
        },
        {
          "//": "[Collection] Scrapbook / Connect",
          "command": "vscode-documentdb.command.scrapbook.connect",
          "group": "1@2"
        }
      ],
      "view/title": [
        {
          "command": "vscode-documentdb.command.connectionsView.refresh",
          "when": "view == connectionsView",
          "group": "navigation@10"
        },
        {
          "command": "vscode-documentdb.command.connectionsView.newConnection",
          "when": "view == connectionsView",
          "group": "navigation@5"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.refresh",
          "when": "view == discoveryView",
          "group": "navigation@10"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.addRegistry",
          "when": "view == discoveryView",
          "group": "navigation@5"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-documentdb.command.scrapbook.executeAllCommands",
          "when": "resourceLangId==mongo"
        },
        {
          "command": "vscode-documentdb.command.scrapbook.executeCommand",
          "when": "resourceLangId==mongo"
        }
      ],
      "editor/title": [],
      "view/item/context": [
        {
          "command": "vscode-documentdb.command.connectionsView.updateConnectionString",
          "when": "view == connectionsView && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "0@2"
        },
        {
          "command": "vscode-documentdb.command.connectionsView.updateCredentials",
          "when": "view == connectionsView && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "0@3"
        },
        {
          "command": "vscode-documentdb.command.connectionsView.renameConnection",
          "when": "view == connectionsView && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "0@4"
        },
        {
          "//": "Remove Connection...",
          "command": "vscode-documentdb.command.connectionsView.removeConnection",
          "when": "view == connectionsView && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "0@5"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.removeRegistry",
          "when": "view == discoveryView && viewItem =~ /\\brootItem\\b/i",
          "group": "1@1"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.addConnectionToConnectionsView",
          "when": "view == discoveryView && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "0@1"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.addConnectionToConnectionsView",
          "when": "view == discoveryView && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "inline"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.learnMoreAboutProvider",
          "when": "view == discoveryView && viewItem =~ /\\benableLearnMoreCommand\\b/i",
          "group": "1@3"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.learnMoreAboutProvider",
          "when": "view == discoveryView && viewItem =~ /\\benableLearnMoreCommand\\b/i",
          "group": "inline"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.filterProviderContent",
          "when": "view == discoveryView && viewItem =~ /\\benableFilterCommand\\b/i",
          "group": "1@2"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.filterProviderContent",
          "when": "view == discoveryView && viewItem =~ /\\benableFilterCommand\\b/i",
          "group": "inline"
        },
        {
          "command": "vscode-documentdb.command.azureResourcesView.addConnectionToConnectionsView",
          "when": "view =~ /azureResourceGroups|azureFocusView/ && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "inline"
        },
        {
          "//": "Create database",
          "command": "vscode-documentdb.command.createDatabase",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "1@1"
        },
        {
          "//": "Copy connection string",
          "command": "vscode-documentdb.command.copyConnectionString",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "0@1"
        },
        {
          "//": "[Account] Mongo DB|Cluster Launch Shell",
          "command": "vscode-documentdb.command.launchShell",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_documentdbcluster\\b/i",
          "group": "2@2"
        },
        {
          "//": "[Database] Create collection",
          "command": "vscode-documentdb.command.createCollection",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_database\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "1@1"
        },
        {
          "//": "[Database] Delete database",
          "command": "vscode-documentdb.command.dropDatabase",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_database\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "1@2"
        },
        {
          "//": "[Database] Mongo DB|Cluster Launch Shell",
          "command": "vscode-documentdb.command.launchShell",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_database\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "2@1"
        },
        {
          "//": "[Database] Mongo DB|Cluster Scrapbook Submenu",
          "submenu": "documentDB.submenus.mongo.database.scrapbook",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_database\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "2@2"
        },
        {
          "//": "[Collection] Mongo DB|Cluster Open collection",
          "command": "vscode-documentdb.command.containerView.open",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_collection\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "1@1"
        },
        {
          "//": "[Collection] Create document",
          "command": "vscode-documentdb.command.createDocument",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_collection\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "1@2"
        },
        {
          "//": "[Collection] Import Documents",
          "command": "vscode-documentdb.command.importDocuments",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_collection\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "2@1"
        },
        {
          "//": "[Collection] Export documents",
          "command": "vscode-documentdb.command.exportDocuments",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_collection\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "2@2"
        },
        {
          "//": "[Collection] Data Migration",
          "command": "vscode-documentdb.command.chooseDataMigrationExtension",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_documentdbcluster\\b/i && migrationProvidersAvailable",
          "group": "1@2"
        },
        {
          "//": "[Collection] Drop collection",
          "command": "vscode-documentdb.command.dropCollection",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_collection\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "3@1"
        },
        {
          "//": "[Collection] Launch shell",
          "command": "vscode-documentdb.command.launchShell",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_collection\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "4@1"
        },
        {
          "//": "[Collection] Mongo DB|Cluster Scrapbook Submenu",
          "submenu": "documentDB.submenus.mongo.collection.scrapbook",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_collection\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "4@2"
        },
        {
          "//": "[Collection/Documents] Mongo DB|Cluster Open collection",
          "command": "vscode-documentdb.command.containerView.open",
          "when": "view =~ /connectionsView|discoveryView|azure(ResourceGroups|FocusView)/ && viewItem =~ /\\btreeitem_documents\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "1@1"
        },
        {
          "//": "[TreeItem] Refresh Item (cluster, database, collection, documents, indexes) -> but not in azure(ResourceGroups|FocusView) as it's done there by the Azure Resources host extension.",
          "command": "vscode-documentdb.command.refresh",
          "when": "view =~ /connectionsView|discoveryView/ && viewItem =~ /\\btreeitem_(documentdbcluster|database|collection|documents|indexes|index)\\b/i && viewItem =~ /\\bexperience_(documentDB|mongoRU)\\b/i",
          "group": "zheLastGroup@1"
        },
        {
          "//": "[TreeItem] Refresh Item in the DiscoveryView (dynamic and context based)",
          "command": "vscode-documentdb.command.refresh",
          "when": "view =~ /discoveryView/ && viewItem =~ /\\benableRefreshCommand\\b/i",
          "group": "zheLastGroup@1"
        }
      ],
      "explorer/context": [],
      "commandPalette": [
        {
          "command": "vscode-documentdb.command.refresh",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.connectionsView.renameConnection",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.connectionsView.updateCredentials",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.connectionsView.updateConnectionString",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.connectionsView.removeConnection",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.removeRegistry",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.addConnectionToConnectionsView",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.filterProviderContent",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.discoveryView.learnMoreAboutProvider",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.azureResourcesView.addConnectionToConnectionsView",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.copyConnectionString",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.createDatabase",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.dropDatabase",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.createCollection",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.dropCollection",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.createDocument",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.importDocuments",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.exportDocuments",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.chooseDataMigrationExtension",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.launchShell",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.containerView.open",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.scrapbook.new",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.scrapbook.connect",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.scrapbook.executeAllCommands",
          "when": "never"
        },
        {
          "command": "vscode-documentdb.command.scrapbook.executeCommand",
          "when": "never"
        }
      ]
    },
    "keybindings": [
      {
        "command": "vscode-documentdb.command.scrapbook.executeCommand",
        "key": "ctrl+shift+'",
        "mac": "cmd+shift+'",
        "when": "editorLangId == 'vscode-documentdb-scrapbook-language' && editorTextFocus"
      },
      {
        "command": "vscode-documentdb.command.scrapbook.executeAllCommands",
        "key": "ctrl+shift+;",
        "mac": "cmd+shift+;",
        "when": "editorLangId == 'vscode-documentdb-scrapbook-language' && editorTextFocus"
      }
    ],
    "configuration": [
      {
        "title": "DocumentDB for VS Code",
        "properties": {
          "documentDB.confirmations.showUrlHandlingConfirmations": {
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Show confirmation dialogs when handling external URLs that open DocumentDB connections in VS Code."
          },
          "documentDB.confirmations.confirmationStyle": {
            "order": 0,
            "type": "string",
            "description": "The behavior to use when confirming operations that cannot be undone, such as deleting resources.",
            "enum": [
              "buttonConfirmation",
              "challengeConfirmation",
              "wordConfirmation"
            ],
            "enumItemLabels": [
              "Button Click Confirmation",
              "Challenge Confirmation",
              "Word Entry Confirmation"
            ],
            "enumDescriptions": [
              "Prompts with a warning dialog where you click a button to confirm deletion.",
              "Prompts with a challenge where you select the correct number among multiple options to confirm deletion.",
              "Prompts with an input box where you enter the name of the resource to confirm deletion."
            ],
            "default": "wordConfirmation"
          },
          "documentDB.userInterface.ShowOperationSummaries": {
            "order": 11,
            "type": "boolean",
            "default": true,
            "description": "Show detailed operation summaries, displaying messages for actions such as database drops, document additions, deletions, or similar events."
          },
          "documentDB.local.port": {
            "order": 20,
            "type": "integer",
            "default": 10260,
            "description": "Port to use when connecting to DocumentDB Local instance"
          },
          "documentDB.mongoShell.path": {
            "type": [
              "string",
              "null"
            ],
            "description": "Full path to folder and executable to start the Mongo shell, needed by some DocumentDB Scrapbook commands. The default is to search in the system path for 'mongosh'.",
            "default": null
          },
          "documentDB.mongoShell.args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Arguments to pass when starting the Mongo shell.",
            "default": [
              "--quiet"
            ]
          },
          "documentDB.mongoShell.timeout": {
            "type": "number",
            "description": "The duration allowed (in seconds) for the Mongo shell to execute a command. Default value is 30 seconds.",
            "default": 30
          },
          "documentDB.mongoShell.batchSize": {
            "type": "number",
            "description": "The batch size to be used when querying working with the shell.",
            "default": 50
          }
        }
      }
    ],
    "walkthroughs": [
      {
        "id": "documentdb-welcome",
        "title": "Get Started with DocumentDB",
        "description": "Connect to any DocumentDB or MongoDB database and start managing data directly inside VS Code.",
        "steps": [
          {
            "id": "open-extension",
            "title": "1. Open the DocumentDB Extension",
            "description": "Click the DocumentDB icon in the sidebar to get started. This opens the database explorer panel.",
            "media": {
              "image": "resources/walkthroughs/sidebar.png",
              "altText": "DocumentDB in the sidebar"
            }
          },
          {
            "id": "connect-database",
            "title": "2. Connect to a Database",
            "description": "Use a connection string or sign in with your cloud provider to connect to **DocumentDB** or **MongoDB**",
            "media": {
              "image": "resources/walkthroughs/connect.png",
              "altText": "Connections screen"
            }
          },
          {
            "id": "browse-collections",
            "title": "3. Browse Collections",
            "description": "Explore your collections using Table, Tree, or JSON views. You can view documents with pagination support for large datasets.",
            "media": {
              "image": "resources/walkthroughs/browse.png",
              "altText": "Collection view with documents"
            }
          },
          {
            "id": "run-queries",
            "title": "4. Run Queries with Autocomplete",
            "description": "Use the built-in editor to run find queries. Get syntax highlighting and field name suggestions while you type.",
            "media": {
              "image": "resources/walkthroughs/query.png",
              "altText": "Query editor with autocomplete"
            }
          }
        ]
      }
    ]
  },
  "x-documentdbApi": {
    "registeredClients": [
      "vscode-cosmosdb",
      "vscode-mongo-migration"
    ]
  }
}
