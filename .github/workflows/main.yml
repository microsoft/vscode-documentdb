name: Node PR Lint, Build and Test

# This workflow handles three scenarios:
#
# 1. Push to `dev/*` branches:
#    - Runs `code-quality-and-tests` and `integration-tests`
#    - Skips `build-and-package` to save time
#
# 2. Pull Requests to `main` (or rel/*):
#    - Runs all jobs: code checks, tests, and packaging
#    - Used for full validation before merge
#
# 3. Push to `main` or `rel/*`:
#    - Runs full workflow (same as PRs)

on:
    workflow_dispatch:

    push:
        branches:
            - main
            - rel/*
            - dev/*

    pull_request:
        branches:
            - main
            - rel/*
            - dev/*

concurrency:
    group: ${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    code-quality-and-tests:
        name: Code Quality & Tests
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: '.'
        steps:
            - name: ✅ Checkout Repository
              uses: actions/checkout@v4

            - name: 🛠 Setup Node.js Environment
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: 'npm'

            - name: 💾 Restore npm Cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: 📦 Install Dependencies (npm ci)
              run: npm ci

            - name: 🌐 Check Localization Files
              run: npm run l10n:check

            - name: 🧹 Run ESLint
              run: npm run lint

            - name: 🎨 Check Code Formatting (Prettier)
              run: npm run prettier

            - name: 🧪 Run Unit Tests (Jest)
              run: npm run jesttest

    integration-tests:
        name: Integration Tests
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: '.'
        steps:
            - name: ✅ Checkout Repository
              uses: actions/checkout@v4

            - name: 🛠 Setup Node.js Environment
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: 'npm'

            - name: 💾 Restore npm Cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: 📦 Install Dependencies (npm ci)
              run: npm ci

            - name: 🔄 Run Integration Tests (Headless UI)
              run: xvfb-run -a npm test

    # Run only on push to `main` or for any PR (to any branch)
    # Skip on direct pushes to `dev/*` branches
    build-and-package:
        name: Build & Package Artifacts
        runs-on: ubuntu-latest
        needs: [code-quality-and-tests, integration-tests]

        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/pull/')

        defaults:
            run:
                working-directory: '.'
        steps:
            - name: ✅ Checkout Repository
              uses: actions/checkout@v4

            - name: 🛠 Setup Node.js Environment
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: 'npm'

            - name: 💾 Restore npm Cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: 📦 Install Dependencies (npm ci)
              run: npm ci

            - name: 🏗 Build Project
              run: npm run build

            - name: 📦 Package Distributables (vsix/tgz)
              run: npm run package

            - name: 📤 Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: Artifacts-${{ github.run_id }}
                  path: |
                      **/*.vsix
                      **/*.tgz
                      !**/node_modules
